<!--Made by Harsh-->

@model ECommerce_WebApp.Entities.User

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }
        .edit-card {
            max-width: 500px;
            margin: 50px auto;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            background-color: #ffffff;
        }
        .edit-header {
            text-align: center;
            margin-bottom: 20px;
            font-weight: bolder;
        }

        .edit-link {
            display: block;
            text-align: center;
            margin-top: 10px;
            color: #007bff;
            font-weight:bold;
        }

        .btn-primary {
            width: 100%;
            background-color: #007bff;
            border: none;
        }
        .btn-primary:hover {
            background-color: #0056b3;
        }
        .password-hint {
            font-size: 0.9rem;
            color: #6c757d;
            margin-bottom: 10px;
            font-weight: bold;
        }
        .form-label{
            font-weight: bold;
        }
    </style>
</head>
<body>
    <h1 class="edit-header">Edit Info</h1>

    <div class="container">
        <div class="edit-card">
            @using (Html.BeginForm("Update", "User", FormMethod.Post))
            {
                <div class="form-group mb-3">
                    @Html.LabelFor(user => user.UserName, "Name", new { @class = "form-label" })
                    @Html.TextBoxFor(user => user.UserName, new { @class = "form-control", @placeholder = "Enter your name" })
                    @Html.ValidationMessageFor(user => user.UserName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(user => user.Email, "Email", new { @class = "form-label" })
                    @Html.TextBoxFor(user => user.Email, new { @class = "form-control", @placeholder = "Enter your email" })
                    @Html.ValidationMessageFor(user => user.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(user => user.Password, "Password", new { @class = "form-label" })
                    <div class="password-hint">
                        Password requirements:
                        <ul>
                            <li>Must contain at least one letter</li>
                            <li>Must contain at least one symbol</li>
                            <li>Must contain at least one digit</li>
                            <li>Must be 8-20 characters long</li>
                        </ul>
                    </div>
                    <div class="input-group">
                        @Html.PasswordFor(user => user.Password, new { @class = "form-control", @id = "passwordInput", @placeholder = "Enter your password" })
                        <span class="input-group-text" style="cursor: pointer;" onclick="togglePassword()">
                            <i id="toggleIcon" class="fa fa-eye"></i>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(user => user.Password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(user => user.StreetAddress, "Street Address", new { @class = "form-label" })
                    @Html.TextBoxFor(user => user.StreetAddress, new { @class = "form-control", @placeholder = "Enter your street address" })
                    @Html.ValidationMessageFor(user => user.StreetAddress, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(user => user.City, "City", new { @class = "form-label" })
                    @Html.TextBoxFor(user => user.City, new { @class = "form-control", @placeholder = "Enter your city name" })
                    @Html.ValidationMessageFor(user => user.City, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(user => user.Province, "Province", new { @class = "form-label" })
                    @Html.DropDownListFor(user => user.Province, (IEnumerable<SelectListItem>)ViewBag.Province, "Select Province", new { @class = "form-select" })
                    @Html.ValidationMessageFor(user => user.Province, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(user => user.PostalCode, "Postal Code", new { @class = "form-label" })
                    @Html.TextBoxFor(user => user.PostalCode, new { @class = "form-control", @placeholder = "Enter your postal code in format {A1A 2B2}" })
                    @Html.ValidationMessageFor(user => user.PostalCode, "", new { @class = "text-danger" })
                </div>

                <button type="submit" class="btn btn-primary">Update</button>

                <a class="edit-link" asp-action="Account">Cancel</a>
            }
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/togglePassword.js"></script>
}