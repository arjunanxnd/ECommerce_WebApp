// <auto-generated />
using System;
using ECommerce_WebApp.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce_WebApp.Services.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241201043456_AddressAdded")]
    partial class AddressAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ECommerce_WebApp.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Electronics",
                            IsFeatured = true
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Computers & Accessories",
                            IsFeatured = true,
                            ParentCategoryId = 1
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Smartphones",
                            IsFeatured = false,
                            ParentCategoryId = 1
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Home Appliances",
                            IsFeatured = false
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Kitchen Appliances",
                            IsFeatured = false,
                            ParentCategoryId = 4
                        });
                });

            modelBuilder.Entity("ECommerce_WebApp.Entities.Product", b =>
                {
                    b.Property<int>("ProdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Dimensions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProdDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProdImage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProdName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ProdPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ProdRating")
                        .HasColumnType("TEXT");

                    b.Property<int>("SalesCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Warranty")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProdId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProdId = 5,
                            Brand = "Sony",
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 11, 1, 4, 34, 54, 254, DateTimeKind.Utc).AddTicks(2206),
                            Dimensions = "48 x 30 x 3 inches",
                            IsFeatured = true,
                            ProdDescription = "Large-screen TV with 4K resolution for ultimate entertainment.",
                            ProdImage = "/images/products/4k_tv.jpg",
                            ProdName = "4K Ultra HD TV",
                            ProdPrice = 799.99m,
                            ProdRating = 4.6m,
                            SalesCount = 120,
                            Warranty = "2 years",
                            Weight = "35 lbs"
                        },
                        new
                        {
                            ProdId = 6,
                            Brand = "Bose",
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 11, 11, 4, 34, 54, 254, DateTimeKind.Utc).AddTicks(3391),
                            Dimensions = "7 x 6 x 3 inches",
                            IsFeatured = false,
                            ProdDescription = "Wireless headphones with noise cancellation and high-fidelity sound.",
                            ProdImage = "/images/products/bluetooth_headphones.jpg",
                            ProdName = "Bluetooth Headphones",
                            ProdPrice = 199.99m,
                            ProdRating = 4.3m,
                            SalesCount = 80,
                            Warranty = "1 year",
                            Weight = "1.5 lbs"
                        },
                        new
                        {
                            ProdId = 7,
                            Brand = "Logitech",
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 11, 6, 4, 34, 54, 254, DateTimeKind.Utc).AddTicks(3430),
                            Dimensions = "18 x 6 x 1 inches",
                            IsFeatured = true,
                            ProdDescription = "RGB backlit mechanical keyboard for gaming and productivity.",
                            ProdImage = "/images/products/mechanical_keyboard.jpg",
                            ProdName = "Mechanical Keyboard",
                            ProdPrice = 89.99m,
                            ProdRating = 4.7m,
                            SalesCount = 150,
                            Warranty = "3 years",
                            Weight = "2 lbs"
                        },
                        new
                        {
                            ProdId = 8,
                            Brand = "Seagate",
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 11, 16, 4, 34, 54, 254, DateTimeKind.Utc).AddTicks(3433),
                            Dimensions = "4.6 x 3.1 x 0.8 inches",
                            IsFeatured = false,
                            ProdDescription = "2TB portable external hard drive for data backup and storage.",
                            ProdImage = "/images/products/external_hard_drive.jpg",
                            ProdName = "External Hard Drive",
                            ProdPrice = 59.99m,
                            ProdRating = 4.4m,
                            SalesCount = 60,
                            Warranty = "2 years",
                            Weight = "0.6 lbs"
                        },
                        new
                        {
                            ProdId = 9,
                            Brand = "Samsung",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 11, 21, 4, 34, 54, 254, DateTimeKind.Utc).AddTicks(3435),
                            Dimensions = "6 x 3 x 0.3 inches",
                            IsFeatured = true,
                            ProdDescription = "Budget smartphone with excellent performance and camera quality.",
                            ProdImage = "/images/products/smartphone_abc.jpg",
                            ProdName = "Smartphone ABC",
                            ProdPrice = 299.99m,
                            ProdRating = 4.1m,
                            SalesCount = 90,
                            Warranty = "1 year",
                            Weight = "0.4 lbs"
                        },
                        new
                        {
                            ProdId = 10,
                            Brand = "Generic",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 11, 26, 4, 34, 54, 254, DateTimeKind.Utc).AddTicks(3438),
                            Dimensions = "9 x 6 x 2 inches",
                            IsFeatured = false,
                            ProdDescription = "Includes phone case, screen protector, and charging cable.",
                            ProdImage = "/images/products/smartphone_accessories.jpg",
                            ProdName = "Smartphone Accessories Pack",
                            ProdPrice = 49.99m,
                            ProdRating = 4.0m,
                            SalesCount = 40,
                            Warranty = "6 months",
                            Weight = "1 lbs"
                        },
                        new
                        {
                            ProdId = 11,
                            Brand = "Panasonic",
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 11, 13, 4, 34, 54, 254, DateTimeKind.Utc).AddTicks(3440),
                            Dimensions = "20 x 14 x 12 inches",
                            IsFeatured = false,
                            ProdDescription = "Compact microwave with multiple cooking modes.",
                            ProdImage = "/images/products/microwave_oven.jpg",
                            ProdName = "Microwave Oven",
                            ProdPrice = 129.99m,
                            ProdRating = 4.5m,
                            SalesCount = 70,
                            Warranty = "3 years",
                            Weight = "25 lbs"
                        },
                        new
                        {
                            ProdId = 12,
                            Brand = "Dyson",
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 11, 19, 4, 34, 54, 254, DateTimeKind.Utc).AddTicks(3443),
                            Dimensions = "18 x 10 x 8 inches",
                            IsFeatured = true,
                            ProdDescription = "HEPA air purifier for clean and fresh indoor air.",
                            ProdImage = "/images/products/air_purifier.jpg",
                            ProdName = "Air Purifier",
                            ProdPrice = 149.99m,
                            ProdRating = 4.6m,
                            SalesCount = 85,
                            Warranty = "2 years",
                            Weight = "12 lbs"
                        },
                        new
                        {
                            ProdId = 13,
                            Brand = "Cuisinart",
                            CategoryId = 5,
                            CreatedDate = new DateTime(2024, 11, 23, 4, 34, 54, 254, DateTimeKind.Utc).AddTicks(3445),
                            Dimensions = "11 x 7 x 8 inches",
                            IsFeatured = false,
                            ProdDescription = "Two-slice toaster with adjustable browning levels.",
                            ProdImage = "/images/products/toaster.jpg",
                            ProdName = "Toaster",
                            ProdPrice = 24.99m,
                            ProdRating = 4.2m,
                            SalesCount = 50,
                            Warranty = "1 year",
                            Weight = "5 lbs"
                        },
                        new
                        {
                            ProdId = 14,
                            Brand = "Keurig",
                            CategoryId = 5,
                            CreatedDate = new DateTime(2024, 11, 28, 4, 34, 54, 254, DateTimeKind.Utc).AddTicks(3448),
                            Dimensions = "15 x 9 x 13 inches",
                            IsFeatured = true,
                            ProdDescription = "Automatic coffee maker with programmable brewing.",
                            ProdImage = "/images/products/coffee_maker.jpg",
                            ProdName = "Coffee Maker",
                            ProdPrice = 79.99m,
                            ProdRating = 4.4m,
                            SalesCount = 65,
                            Warranty = "2 years",
                            Weight = "8 lbs"
                        });
                });

            modelBuilder.Entity("ECommerce_WebApp.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("TEXT");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            City = "Mississauga",
                            Email = "harsh@gmail.com",
                            Password = "H@rsh123",
                            PostalCode = "L5N 4C6",
                            Province = "ON",
                            StreetAddress = "1234 Clairview St",
                            UserName = "Harsh"
                        },
                        new
                        {
                            UserId = 2,
                            City = "Oakville",
                            Email = "keron@gmail.com",
                            Password = "Keron@123",
                            PostalCode = "B2M 3F4",
                            Province = "BC",
                            StreetAddress = "5642 Winston Park",
                            UserName = "Keron"
                        },
                        new
                        {
                            UserId = 3,
                            City = "Brampton",
                            Email = "arjun@gmail.com",
                            Password = "@rjun123",
                            PostalCode = "C5B 7M8",
                            Province = "AB",
                            StreetAddress = "6640 Boulevard Ave",
                            UserName = "Arjun"
                        });
                });

            modelBuilder.Entity("ECommerce_WebApp.Entities.Category", b =>
                {
                    b.HasOne("ECommerce_WebApp.Entities.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("ECommerce_WebApp.Entities.Product", b =>
                {
                    b.HasOne("ECommerce_WebApp.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ECommerce_WebApp.Entities.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
